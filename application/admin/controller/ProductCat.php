<?php

namespace app\admin\controller;

use think\Controller;
use think\Db;
use think\Request;

class ProductCat extends Controller
{


//    public function _initialize()
//    {
//        parent::_initialize(); // TODO: Change the autogenerated stub
//
//    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        $test = 'haha';
        $this->assign('test', $test);
        return $this->fetch('ProductCat/ProductCat');
    }

    public function GetCatJson()
    {


        $data = Db::query('select id,name,parent_id from psgogogo_product_cat');


//        { "name":"菜鸟教程" , "url":"www.runoob.com" },
//        { "name":"google" , "url":"www.google.com" },
//        { "name":"微博" , "url":"www.weibo.com" }
//
        $outstr = '[';
        foreach ($data as $key => $val) {
            if ($data[$key]['parent_id'] == 0) {
                $outstr .= '{text: "' . $data[$key]['name'] . '"},';
            } else {
                $outstr .= '{text: ' . $data[$key]['name'] . '}],noddes:[';
            }

            //unset($data);
        }
        $outstr = $outstr . ']';

        echo $outstr;

//        print_r(json_encode($data));


//        $tree = $this->getTree($data, 0);
//        return json($tree);
    }

    public function ttt()
    {
        $data = [
            'baba' => '张',
            'mama' => '党',
            ['gege' => '旺',
                'saosao' => '',
                'zhinv' => '谁',
            ],
        ];

        $data = array('水果' => "苹果", '水果' => "香蕉", '水果' => "大鸭梨");

        $data = array("苹果", "香蕉", "大鸭梨");
        foreach ($data as $key => $val) {
            echo $val;

        }
//
//        for($i=0;$i<count($data);$i++)
//        {
//           echo $data[$i];
//        }


        //print_r($data).'<p>';

        //var_dump($data).'<p>';

        //echo json_encode($data);

//        $data=['张','党','旺'];
//
//        foreach ($data as $key=>$val)
//        {
//            echo $key.':'.$val;
//
//        }
//
//        $tes=[1,2,3,4];
//        foreach (array(1, 2, 3, 4) as &$value) {
//            $value = $value * 2;
//        }

        //dump($value);

//        foreach($data as $key=>$v)
//        {
//            echo $key."</br>";
//        }
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        //
    }

    /**
     * 显示指定的资源
     *
     * @param  int $id
     * @return \think\Response
     */
    public function read($id)
    {
        //
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request $request
     * @param  int $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * 删除指定资源
     *
     * @param  int $id
     * @return \think\Response
     */
    public function delete($id)
    {
        //
    }

    protected function getTree($data, $pId)
    {
        $tree = null;
        foreach ($data as $k => $v) {
            if ($v['parent_id'] == $pId) {        //父亲找到儿子
                $v['parent_id'] = $this->getTree($data, $v['id']);
                $tree[] = $v;
                //unset($data[$k]);
            }
        }
        return $tree;
    }
}
